# https://www.docker.com/blog/how-to-use-the-official-nginx-docker-image/
# https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
# https://medium.com/@prajwal.chin/understanding-docker-dns-2ed4b070a0

server { 
    listen 80;
    server_name nginx_reverse_proxy;

    # Use the Docker daemonâ€™s embedded DNS resolver
    resolver 127.0.0.11;

    location / {
        # This would be the directory where your static files are stored at
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }

    location ~ ^/fastapi1/(.*)$ {
        # Use a variable so that localhost:5000 might be down while nginx starts:
        set $upstream http://fastapi_service1:8000/;
        # Put together the upstream request path using the captured component after the location path, and the query parameters:
        proxy_pass $upstream/api/$1$is_args$args;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-NginX-Proxy true;
        # proxy_pass http://fastapi_service1:8000/;
        # proxy_ssl_session_reuse off;
        # proxy_set_header Host $http_host;
        # proxy_cache_bypass $http_upgrade;
        # proxy_redirect off;
    }
    location ~ ^/fastapi2/(.*)$ {
        # Use a variable so that localhost:5000 might be down while nginx starts:
        set $upstream http://fastapi_service2:8000/;
        # Put together the upstream request path using the captured component after the location path, and the query parameters:
        proxy_pass $upstream/api/$1$is_args$args;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-NginX-Proxy true;
        # proxy_pass http://fastapi_service2:8000/;
        # proxy_ssl_session_reuse off;
        # proxy_set_header Host $http_host;
        # proxy_cache_bypass $http_upgrade;
        # proxy_redirect off;
    }
}
